<?php

/**
 * Implementation of hook_perm()
 */
function hosting_piwik_perm() {
  return array('administer piwik');
}

/**
 * Implementation of hook_menu()
 */
function hosting_piwik_menu() {

  $items = array();

  $items['admin/hosting/piwik'] = array(
    'title' => t('Piwik'),
    'access arguments' => array('administer piwik'),
    'file' => 'hosting_piwik.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hosting_piwik_settings'),
  );

  return $items;
}


/**
 * Implementation of hook_delete()
 */
function hosting_piwik_delete($node) {
  db_query("DELETE FROM {hosting_piwik_sites}
            WHERE nid=%d", $node->nid);
  db_query("DELETE FROM {hosting_piwik_site_aliases}
            WHERE nid=%d", $node->nid);
}

/**
 * Implementation of hook_delete_revision()
 */
function hosting_piwik_delete_revision($node) {
  db_query("DELETE FROM {hosting_piwik_sites}
            WHERE vid=%d", $node->vid);
  db_query("DELETE FROM {hosting_piwik_site_aliases}
            WHERE vid=%d", $node->vid);
}

function hosting_piwik_load($node) {
  $site_aliases = array();
  $resource = db_query("SELECT alias
                        FROM {hosting_site_alias}
                        WHERE nid=%d", $node->nid);
  while ($row = db_result($resource)) {
    $site_aliases[] = $row;
  }

  $additions['site_aliases'] = $site_aliases;
  $additions['piwik_site_id'] = hosting_piwik_get_piwik_id($node->nid);

  return $additions;
}

function hosting_piwik_update($node) {
  
  $override_site_id = (int) $node->hosting_piwik_site_id;
  if ($override_site_id == 0) {
    return ;
  }
  
  $has_entry = (int) db_result(
      db_query("SELECT nid FROM {hosting_piwik_sites} WHERE nid = %d", 
          $node->nid));
  
  if ($has_entry) {
    return ;
  }

  db_query("INSERT INTO {hosting_piwik_sites} (vid, nid, piwik_site_id)
            VALUES (%d, %d, %d)",
            $node->vid, $node->nid, $override_site_id);
  
}

/**
 * Implementation of hook_nodeapi()
 */
function hosting_piwik_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == 'site') {
    switch ($op) {
      case 'delete' :
        hosting_piwik_delete($node);
        break;
      case 'delete revision':
        hosting_piwik_delete_revision($node);
        break;
      case 'load':
        return hosting_piwik_load($node);
        break;
      case 'view':
       $node->content['hosting_piwik_site_id'] = array(
         '#type'    => 'item',
         '#title'   => 'Piwik Site ID',
         '#value'   => (int) $node->piwik_site_id,
       );
      case 'insert': // NB intentional fall-through
      case 'update':
        hosting_piwik_update($node);
        break;
    }
  }
}

function hosting_piwik_get_piwik_id($nid) {
  return (int) db_result(db_query("
    SELECT piwik_site_id
    FROM {hosting_piwik_sites}
    WHERE nid = %d
  ", $nid));
}

function hosting_piwik_form_site_node_form_alter(&$form, &$form_state,
    $form_id) {

  $form['hosting_piwik_site_id'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Piwik Site ID'),
    '#description'   => 
      t('Override normal Piwik site creation behavior.  ' .
          'If a positive integer is entered, no Piwik site will be created, ' .
          'and the specified integer will be used as the Piwik site ID. ' .
          'If a negative number is entered, no Piwik site will be created, ' .
          'and no Piwik site ID will be provided in settings.php. ' .
          'Leave blank or enter 0 to auto-create a Piwik site and to use ' .
          'the auto-created site ID in settings.php.'),
    '#required'      => FALSE,
  );

  if (!empty($form['#node'])) {
    $node = $form['#node'];
    if (is_object($node) && isset($node->piwik_site_id)) {
      $form['hosting_piwik_site_id']['#default_value'] = $node->piwik_site_id;
      $form['hosting_piwik_site_id']['#disabled'] = TRUE;
    }
  }

}
